name: Deploy Docker to AWS EC2

on:
  push:
    branches:
      - main  # Change this to your default branch if it's not 'main'

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_ACCESS_TOKEN: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
  DOCKERHUB_REPOSITORY_CLIENT: ${{ secrets.DOCKERHUB_REPOSITORY_CLIENT }}
  DOCKERHUB_REPOSITORY_SERVER: ${{ secrets.DOCKERHUB_REPOSITORY_SERVER }}
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  SECRET: ${{ secrets.SECRET }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build and push Docker image to Docker Hub
        run: |
          docker compose build --no-cache
          docker compose push

      - name: Deploy the Docker image to GCP GCE
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GCE_HOST }}
          username: ${{ secrets.GCE_USERNAME }}
          key: ${{ secrets.GCE_SSH_KEY }}
          envs: DOCKERHUB_USERNAME, DOCKERHUB_ACCESS_TOKEN, DOCKERHUB_REPOSITORY_CLIENT, DOCKERHUB_REPOSITORY_SERVER, MONGODB_URI, SECRET
          script: |
            # Navigate to the directory where Docker Compose is executed
            cd Vital/

            git pull

            # Log in to DockerHub
            sudo docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_ACCESS_TOKEN

            # Stop and remove the previous Docker session
            sudo docker compose down
            
            # Pull the latest images
            sudo docker compose pull

            # Start the containers using Docker Compose
            sudo docker compose up -d