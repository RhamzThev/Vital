name: Deploy Docker to AWS EC2

on:
  push:
    branches:
      - main  # Change this to your default branch if it's not 'main'

env:
  IAM_ROLE: ${{ secrets.IAM_ROLE }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  ECR_REPOSITORY_CLIENT: ${{ secrets.ECR_REPOSITORY_CLIENT }}
  ECR_REPOSITORY_SERVER: ${{ secrets.ECR_REPOSITORY_SERVER }}
  IMAGE_TAG: ${{ github.sha }}
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  SECRET: ${{ secrets.SECRET }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image to ECR
        run: |
          docker compose build --no-cache
          docker compose push

      - name: Deploy Docker image to AWS EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: IAM_ROLE, AWS_REGION, ECR_REGISTRY, ECR_REPOSITORY_CLIENT, ECR_REPOSITORY_SERVER, IMAGE_TAG, MONGODB_URI, SECRET
          script: |
            # Navigate to the directory where Docker Compose is executed
            cd Vital/

            git pull

            # Log in to Amazon ECR
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY 

            # Stop and remove the previous Docker session
            docker compose down
            
            # Pull the latest images
            docker compose pull

            # Start the containers using Docker Compose
            docker compose up -d